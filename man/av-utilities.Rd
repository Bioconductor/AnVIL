% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/av-utilities.R
\name{av-utilities}
\alias{av-utilities}
\alias{avcopy}
\alias{avlist}
\alias{avremove}
\alias{avbackup}
\alias{avrestore}
\alias{avstorage}
\title{List, copy, and remove files in either a Google Cloud Storage bucket
or Azure Blob Storage container}
\usage{
avcopy(source, destination, ...)

avlist()

avremove(file, recursive, ...)

avbackup(source, destination = "", ...)

avrestore(source, destination = ".", ...)

avstorage()
}
\arguments{
\item{source}{\code{character(1)} a path to a Google Cloud Storage bucket or Azure
Blob Storage container, possibly with wild-cards for file-level pattern
matching.}

\item{destination}{\code{character(1)}, Either a Google Cloud Storage bucket,
Azure Blob Storage container, or a local file system destination path.}

\item{recursive}{\code{logical(1)} Whether to remove files or directories
recursively.}

\item{\ldots}{additional arguments passed to \code{gsutil_cp()} or
\code{az_copy_to_storage()} / \code{az_copy_from_storage()}}
}
\value{
For GCP functions, the exit status of function; otherwise, functions
are called for the side effect of moving / removing files.
}
\description{
\code{avcopy()} copies files to and from either a Google Cloud
Storage bucket or an Azure Blob Storage container using \code{gsutil} or
\code{azcopy}, respectively. The function either calls the functions
\code{gsutil_cp()} in the \code{AnVILGCP} package or \code{az_copy_to_storage()} /
\code{az_copy_from_storage()} in the \code{AnVILAz} package.
}
\examples{
if (interactive() && AnVILGCP::gcloud_exists()) {
    src <- paste0(
        "gs://genomics-public-data/1000-genomes/",
        "other/sample_info/sample_info.csv"
    )
    avcopy(src, tempdir())
} else if (interactive() && AnVILAz::az_exists()) {
    src <- paste0(
        "https://curated1000genomes.blob.core.windows.net/dataset/nested/",
        "chr1/part-00002-tid-5326935979355877101-dd68248e-aa4b-419a-b1ce-",
        "fa2ccb6b0952-1006-1-c000.snappy.parquet"
    )
    avcopy(src, tempdir())
}
}
