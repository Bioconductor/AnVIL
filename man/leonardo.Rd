% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/leonardo.R
\name{api_clusters}
\alias{api_clusters}
\alias{api_cluster}
\alias{notebooks_invalidate_token}
\alias{status}
\alias{ping}
\title{Interact with Leonardo REST API}
\usage{
api_clusters(googleProject = NULL, ..., includeDeleted = FALSE,
  verbose = FALSE)

api_cluster(googleProject = "anvil-leo-dev", clusterName,
  verbose = FALSE)

notebooks_invalidate_token(verbose = FALSE)

status(verbose = FALSE)

ping(verbose = FALSE)
}
\arguments{
\item{googleProject}{(optional) character(1) name of google
project, e.g., `"anvil-leo-dev"`}

\item{...}{(optional) for `api_clusters()`, key-value pairs of
'labels' to filter running clusters, e.g., `clusterName =
"jupyter_bioc"`.}

\item{includeDeleted}{(optional) logical(1) include deleted clusters?}

\item{verbose}{(optional) logical(1) report http activity; see
`?httr::verbose`.}

\item{clusterName}{character(1) name of a cluster to query for
details. Names are from `api_clusters()$labels.clusterName)`.}
}
\value{
`api_clusters()` returns a tibble of running (or running
    and deleted) clusters.

`api_cluster()` returns a list-of-lists describing a single
    cluster.

`notebooks_invalidate_token()` returns "OK" when the token
    is successfully invalidated.

`status()` returns a JSON list-of-lists describing the status of
    the system. It raises a warning of the status is not 'ok'.

`ping()` returns "OK" on success, JSON list-of-lists on on
    error.
}
\description{
Functions on this page interact with Leonardo's REST
    api, documented at `leonardo.dev.anvilproject.org/#/`. See
    `?authenticate` for OAuth 2.0 authentication.
}
\details{
`api_clusters()` lists all active clusters.

`api_cluster()` gets details of a single Dataproc cluster.

`notebooks_invalidate_token()` queries the leonardo
    service when a user's Google token is invalidated (e.g. when
    logging out of the application). This ensures that the token is
    also invalidated in Leo and that the user's proxied notebook
    connections stop working.

`status()` queries the leonardo service for status of all
    system components.

`ping()` tests the accessibility of leonardo.
}
\examples{
if (interactive())
    api_clusters() \%>\% select(starts_with("label"))
}
