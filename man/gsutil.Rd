% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsutil.R
\name{gsutil}
\alias{gsutil}
\alias{gsutil_is_uri}
\alias{gsutil_ls}
\alias{gsutil_stat}
\alias{gsutil_cp}
\alias{gsutil_rm}
\alias{gsutil_rsync}
\alias{gsutil_help}
\title{Internal functions to interact with the gsutil command line}
\usage{
gsutil_is_uri(source)

gsutil_ls(source = character(), ..., recursive = FALSE)

gsutil_stat(source)

gsutil_cp(source, destination, ..., recursive = FALSE, parallel = TRUE)

gsutil_rm(source, ..., force = FALSE, recursive = FALSE,
  parallel = TRUE)

gsutil_rsync(source, destination, ..., dry = TRUE, delete = FALSE,
  recursive = FALSE, parallel = TRUE)

gsutil_help(cmd = character(0))
}
\arguments{
\item{source}{`character(1)`, paths to a google storage bucket,
possibly with wild-cards for file-level pattern matching.}

\item{...}{additional arguments passed as-is to the `gsutil` subcommand.}

\item{recursive}{`logical(1)`; perform operation recursively from
`source`?. Default: `FALSE`.}

\item{destination}{`character(1)`, google cloud bucket or local
file system destination path.}

\item{parallel}{`logical(1)`, perform parallel multi-threaded /
multi-processing (default is `TRUE`).}

\item{force}{`logical(1)`: continue silently despite errors when
removing multiple objects. Default: `FALSE`.}

\item{dry}{`logical(1)`, when `TRUE` (default), return the
consequences of the operation without actually performing the
operation.}

\item{delete}{`logical(1)`, when `TRUE`, remove files in
`destination` that are not in `source`. Exercise caution when
you use this option: it's possible to delete large amounts of
data accidentally if, for example, you erroneously reverse
source and destination.}

\item{cmd}{`character()` (optional) command name, e.g.,
`"ls"` for help.}
}
\value{
`gsutil_is_uri()`: a logical vector of length equal to
    `source`, with `TRUE` values indicating that the `source` is a
    character vector with corresponding element prefix `gs://`.

`gsutil_ls()`: `character()` listing of `source` content.

`gsutil_stat()`: `character()` description of status of
    objects matching `source`.

`gsutil_cp()`: exit status of `gsutil_cp()`, invisibly.

`gsutil_rm()`: exit status of `gsutil_rm()`, invisibly.

`gsutil_rsync()`: exit status of `gsutil_rsync()`, invisbly.

`gsutil_help()`: `character()` help text for subcommand `cmd`.
}
\description{
These are internal (non-exported) functions that
    invoke the `gsutil` command line utility.

`gsutil_is_uri()` returns TRUE if the `source`
    argument has a `gs://` prefix.

`gsutil_ls()`: List contents of a google cloud bucket
    or, if `source` is missing, all Cloud Storage buckets under
    your default project ID

`gsutil_stat()`: print, as a side effect, the status
    of a bucket, directory, or file.

`gsutil_cp()`: copy contents of `source` to
    `destination`. At least one of `source` or `destination` must
    be Google cloud bucket; `source` can be a character vector with
    length greater than 1. Use `gsutil_help("cp")` for `gsutil` help.

`gsutil_rm()`: remove contents of a google cloud
    bucket.

`gsutil_rsync()`: synchronize a source and a destination.

`gsutil_help()`: print 'man' page for the `gsutil`
    command or subcommand. Note that only commandes documented on this
    R help page are supported.
}
\details{
The `gsutil` system command is required.  The search for
    `gsutil` starts with environment variable `GSUTIL_BINARY_PATH`
    providing the full path to the binary.  On Windows, the search
    tries to find `Google\\Cloud
    SDK\\google-cloud-sdk\\bin\\gsutil.cmd` in the `LOCAL APP
    DATA`, `Program Files`, and `Program Files (x86)` directories.
    On linux / macOS, the search continues with `Sys.which()`,
    followed by `GCLOUD_INSTALL_PATH` (such that `gsutil` is
    located at `$GCLOUD_INSTALL_PATH/bin/gsutil`), and defaulting
    to `~/google-cloud-sdk/bin/gsutil`.

`gsutil_rsync()': To make `"gs://mybucket/data"` match the contents
of the local directory `"data"` you could do:

\code{gsutil_rsync("data", "gs://mybucket/data", delete = TRUE)}

To make the local directory "data" the same as the contents of
gs://mybucket/data:

\code{gsutil_rsync("gs://mybucket/data", "data", delete = TRUE)}

If `destination` is a local path and does not exist, it will be
created.
}
\examples{

\dontrun{
    gsutil_stat('gs://anvil-bioc', 'blah')
}


\dontrun{
   # for a single file
   gsutil_cp("gs://anvil-bioc/blah",
             "/tmp/blah-copy", recursive=FALSE, parallel=FALSE)

   # for a folder with all contents
   # "/tmp/foobar-copy" must be an existing destination or must be created

   gsutil_cp("gs://anvil-bioc/foobar",
             "/tmp/foobar-copy", recursive=TRUE, parallel=TRUE)
}


\dontrun{
   ## Remove a single file
   gsutil_rm('gs://anvil-bioc', 'blah', recursive = FALSE)

   ## Remove a folder
   gsutil_rm('gs://anvil-bioc', 'foo-bar', recursive=TRUE, parallel=TRUE)
}


\dontrun{
   ## Rsync from google bucket source to local destination
   gsutil_rsync('gs://anvil-bioc', '/tmp/local-copy')

   ## Rsync from local source to google bucket
   gsutil_rsync('/tmp/local-copy', 'gs://anvil-bioc')
}

}
